using ContactManager.Data;
using ContactManager.Models;
using CsvHelper;
using CsvHelper.Configuration;
using CsvHelper.TypeConversion;
using Microsoft.AspNetCore.Mvc;
using System.Globalization;

namespace ContactManager.Services
{
    public class CsvService
    {
        public List<Contact> ReadCsvFile(Stream fileStream)
        {
            try
            {
                using var reader = new StreamReader(fileStream);
                using var csv = new CsvReader(reader, CultureInfo.InvariantCulture);

                // Register the custom mapping
                csv.Context.RegisterClassMap<ContactMap>();

                var contacts = csv.GetRecords<Contact>().ToList();

                return contacts;
            }
            catch (HeaderValidationException ex)
            {
                // Specific exception for header issues
                throw new ApplicationException("CSV file header is invalid.", ex);
            }
            catch (TypeConverterException ex)
            {
                // Specific exception for type conversion issues
                throw new ApplicationException("CSV file contains invalid data format.", ex);
            }
            catch (Exception ex)
            {
                // General exception for other issues
                throw new ApplicationException("Error reading CSV file", ex);
            }
        }
    }

    public class ContactMap : ClassMap<Contact>
    {
        public ContactMap()
        {
            Map(m => m.Name);
            Map(m => m.DateOfBirth);
            Map(m => m.Married);
            Map(m => m.Phone);
            Map(m => m.Salary);
            // Ignore the Id field since it's generated by EF Core
            Map(m => m.Id).Ignore();
        }
    }
}
